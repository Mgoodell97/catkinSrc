<!-- mission file for GADEN player -->

<launch>

    <node pkg="particle_filter" type="particle_filter.py" name="partile_filter" output="screen"/>   # package, script, name for ros, !!!!output to screen!!!!

    <arg name="scenario" default="14x14Edge" />

    ### NODE environment (for RVIZ visualization) ###
    <node pkg="gaden_environment" type="environment" name="environment" output="screen">
	    <param name="verbose" value="false"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="map_gaden"/>

	    # Plot CAD models (Collada format .dae)
      <param name="number_of_CAD" value="1"/>
	    <rosparam subst_value="True">
            CAD_0: package://test_env/$(arg scenario)/cad_models/walls.dae
            CAD_0_color: [0.92, 0.96, 0.96]
      </rosparam>

	    # Plot 3D OccupancyGridmap_gaden
	    <param name="occupancy3D_data" value="$(find test_env)/$(arg scenario)/OccupancyGrid3D.csv" />

	    # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <rosparam>
            source_0_position_x: 7.0
            source_0_position_y: 13.0
            source_0_position_z: 2.0
            source_0_scale: 0.2
            source_0_color: [0.0, 1.0, 0.0]
        </rosparam>
    </node>


    ### NODE PLAYER ###
    #-------------------
    <node pkg="gaden_player" type="gaden_player" name="gaden_player" output="screen">
        <param name="verbose" value="false" />
	    <param name="player_freq" value="5" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="0" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)

        # Data from the "filament_simulator" pkg. Multiple sources can be set here
        <param name="simulation_data_0" value="$(find test_env)/$(arg scenario)/gas_simulations/FilamentSimulation_gasType_1_sourcePosition_7.00_13.00_2.00_iteration_" />

        # Loop options
        <param name="allow_looping" value="true" />
        <param name="loop_from_iteration" value="150" />
        <param name="loop_to_iteration" value="298" />

    </node>




    ### NODE Simulated Gas Sensor ###
    #--------------------------------
    # SENSOR MODELS:
    # MOX: TGS2620=0, TGS2600=1, TGS2611=2
    # PID: MiniRaeLite=30

    <node pkg="tf" type="static_transform_publisher" name="pid0_broadcaster" args="7.0 11.0 2.0 0 0 0 map pid0_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="pid1_broadcaster" args="7.0 7.0 2.0 0 0 0 map pid1_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="pid2_broadcaster" args="7.0 3.0 2.0 0 0 0 map pid2_frame 100" />

    <group ns="PID00">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen">
	        <param name="/sensor_model" value="30" />
	        <param name="/sensor_frame" value="pid0_frame" />
	        <param name="/fixed_frame" value="map"/>
        </node>
    </group>

    <group ns="PID01">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen">
	        <param name="/sensor_model" value="30" />
	        <param name="/sensor_frame" value="pid1_frame" />
	        <param name="/fixed_frame" value="map"/>
        </node>
    </group>

    <group ns="PID02">
        <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen">
	        <param name="/sensor_model" value="30" />
	        <param name="/sensor_frame" value="pid2_frame" />
	        <param name="/fixed_frame" value="map"/>
        </node>
    </group>

    ### NODE Simulated Wind Sensor ###
    #---------------------------------

    <!-- <node pkg="tf" type="static_transform_publisher" name="anemometer_broadcaster" args="3.0 3.0 0.4 0 0 0 map_gaden anemometer_frame 100" />
    <group ns="Anemometer01">
        <node pkg="simulated_anemometer" type="simulated_anemometer" name="fake_anemometer" output="screen">
	        <param name="/sensor_frame" value="anemometer_frame" />
	        <param name="/fixed_frame" value="map_gaden"/>
        </node>
    </group> -->


    ### RQT PLOT Sensors ###
    #-----------------------
    <!-- <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot1"  args="/Mox00/Sensor_reading/raw /Mox01/Sensor_reading/raw /Mox02/Sensor_reading/raw "/> -->
    <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot2"  args="/PID00/Sensor_reading/raw /PID01/Sensor_reading/raw /PID02/Sensor_reading/raw"/>
    <!-- <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot3"  args="/Anemometer01/WindSensor_reading "/> -->



    ### RVIZ ###
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find test_env)/$(arg scenario)/launch/ros/gaden.rviz"/>
</launch>
