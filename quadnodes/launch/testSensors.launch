<?xml version="1.0"?>
<launch>
  <arg name="PlumeType" default="gaussian"/>

  <arg name="SpawnUAV1" default="True"/>
  <arg name="x1" default="25.0"/>
  <arg name="y1" default="33.75"/>
  <arg name="z1" default="0.0"/>

  <arg name="SpawnUAV2" default="False"/>
  <arg name="x2" default="25.0"/>
  <arg name="y2" default="22.5"/>
  <arg name="z2" default="0.0"/>

  <arg name="SpawnUAV3" default="False"/>
  <arg name="x3" default="25.0"/>
  <arg name="y3" default="11.25"/>
  <arg name="z3" default="0.0"/>

  <arg name="GazeboGUI" default="False"/>
  <arg name="RVIZGUI" default="True"/>
  <arg name="ReadingPlot" default="False"/>
  <arg name="plotGaussian" default="False"/>
  <arg name="rosbag" default="False"/>
  <arg name="enableObsAvoid" default="True"/>

  <param name="Q"                type="double"  value="0.0258"/> #  kg/s     release rate
  <param name="vPlume"           type="double"  value="0.5"   /> #  m/s      velocity
  <param name="DyPlume"          type="double"  value="0.5"   /> #  m^2/s    diffusion along y
  <param name="DzPlume"          type="double"  value="0.005" /> #  m^2/s    diffusion along z

  <!-- Plume location -->
  <param name="xPlume"           type="double"  value="25"    /> # m
  <param name="yPlume"           type="double"  value="45"    /> # m
  <param name="zPlume"           type="double"  value="2"     /> # m
  <param name="thetaPlume"       type="double"  value="-90"   /> # degrees (both methods need to know the wind direction)

  <include file="$(find quadnodes)/launch/50x50NewPlume.launch" if="$(eval PlumeType == 'gaden')"/>

  <node name="plotGaussianwithPF" pkg="quadnodes" type="plotGaussianwithPF.py" output="screen" if="$(eval plotGaussian)">
      <!-- Plot UAVS -->
      <param name="plotUAV1" type="bool" value="$(arg SpawnUAV1)"/>
      <param name="plotUAV2" type="bool" value="$(arg SpawnUAV2)"/>
      <param name="plotUAV3" type="bool" value="$(arg SpawnUAV3)"/>

      <!-- Map params -->
      <param name="mapMin" value="0"/>
      <param name="mapMax" value="50"/>
  </node>

  <!-- Gazebo sim -->
  <!-- Needed for quad -->
  <include file="$(find quadnodes)/launch/gazeboOutdoor.launch">
    <arg name="world" default="$(find quadnodes)/worlds/empty.world"/>
    <arg name="gui" default="$(arg GazeboGUI)"/>
  </include>

  <!-- Spawn UAV1 -->
  <include file="$(find quadnodes)/launch/spawnUAV1_SDF.launch" if="$(eval SpawnUAV1)">
    <arg name="x" default="$(arg x1)"/>
    <arg name="y" default="$(arg y1)"/>
    <arg name="z" default="$(arg z1)"/>
  </include>

  <!-- Spawn UAV2 -->
  <include file="$(find quadnodes)/launch/spawnUAV2_SDF.launch" if="$(eval SpawnUAV2)">
    <arg name="x" default="$(arg x2)"/>
    <arg name="y" default="$(arg y2)"/>
    <arg name="z" default="$(arg z2)"/>
  </include>

  <!-- Spawn UAV3 -->
  <include file="$(find quadnodes)/launch/spawnUAV3_SDF.launch" if="$(eval SpawnUAV3)">
    <arg name="x" default="$(arg x3)"/>
    <arg name="y" default="$(arg y3)"/>
    <arg name="z" default="$(arg z3)"/>
  </include>

  <node name="startPositionController" pkg="quadnodes" type="StartPositionController.py" output="log"/>

  <group ns="UAV1" if="$(eval SpawnUAV1)">
    <!-- Gas sensor -->
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen" if="$(eval PlumeType == 'gaden')">
        <param name="sensor_model" value="30" />
        <param name="sensor_frame" value="pid_frame1" />
        <param name="fixed_frame" value="map_gaden"/>
        <param name="noise_std" value="20.1"/>
    </node>

    <node name="gaussianPlumeSensor" pkg="quadnodes" type="gaussianPlumeSensor.py" output="log" if="$(eval PlumeType == 'gaussian')">
      <param name="UAVofIntrest" value="UAV1"/>
    </node>

    <!-- Motion Planner -->
    <node name="waypointListNode" pkg="quadnodes" type="waypointTemplate.py" output="screen">
      <rosparam param="xWaypointList"> [25]</rosparam>
      <rosparam param="yWaypointList"> [33.75]</rosparam>
      <rosparam param="zWaypointList"> [2]</rosparam>
      <param name="waypointIndex"          value="0"   />   # [-]
      <param name="waypointRadius"         value="1"   />   # m
      <param name="stayTime"               value="2.0" />   # s
    </node>

    <!-- Position Controller -->
    <include file="$(find quadnodes)/launch/positionControl.launch">
      <arg name="quadID"         default="1"/>
      <arg name="enableObsAvoid" default="$(arg enableObsAvoid)"/>
      <arg name="SpawnUAV1"      default="$(arg SpawnUAV1)"/>
      <arg name="SpawnUAV2"      default="$(arg SpawnUAV2)"/>
      <arg name="SpawnUAV3"      default="$(arg SpawnUAV3)"/>
    </include>
  </group>

  <group ns="UAV2" if="$(eval SpawnUAV2)">
    <!-- Gas sensor -->
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="log" if="$(eval PlumeType == 'gaden')">
        <param name="sensor_model" value="30" />
        <param name="sensor_frame" value="pid_frame2" />
        <param name="fixed_frame" value="map_gaden"/>
        <param name="noise_std" value="20.1"/>
    </node>

    <node name="gaussianPlumeSensor" pkg="quadnodes" type="gaussianPlumeSensor.py" output="log" if="$(eval PlumeType == 'gaussian')">
      <param name="UAVofIntrest" value="UAV2"/>
    </node>

    <!-- Motion Planner -->
    <node name="waypointListNode" pkg="quadnodes" type="waypointTemplate.py" output="log">
      <rosparam param="xWaypointList"> [25]</rosparam>
      <rosparam param="yWaypointList"> [22.5]</rosparam>
      <rosparam param="zWaypointList"> [2]</rosparam>
      <param name="waypointIndex"          value="0"   />   # [-]
      <param name="waypointRadius"         value="1"   />   # m
      <param name="stayTime"               value="2.0" />   # s
    </node>

    <!-- Position Controller -->
    <include file="$(find quadnodes)/launch/positionControl.launch">
      <arg name="quadID"         default="2"/>
      <arg name="enableObsAvoid" default="$(arg enableObsAvoid)"/>
      <arg name="SpawnUAV1"      default="$(arg SpawnUAV1)"/>
      <arg name="SpawnUAV2"      default="$(arg SpawnUAV2)"/>
      <arg name="SpawnUAV3"      default="$(arg SpawnUAV3)"/>
    </include>
  </group>

  <group ns="UAV3" if="$(eval SpawnUAV3)">
    <!-- Gas sensor -->
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="log" if="$(eval PlumeType == 'gaden')">
        <param name="sensor_model" value="30" />
        <param name="sensor_frame" value="pid_frame3" />
        <param name="fixed_frame" value="map_gaden"/>
        <param name="noise_std" value="20.1"/>
    </node>

    <node name="gaussianPlumeSensor" pkg="quadnodes" type="gaussianPlumeSensor.py" output="log" if="$(eval PlumeType == 'gaussian')">
      <param name="UAVofIntrest" value="UAV3"/>
    </node>

    <!-- Motion Planner -->
    <node name="waypointListNode" pkg="quadnodes" type="waypointTemplate.py" output="log">
      <rosparam param="xWaypointList"> [25]</rosparam>
      <rosparam param="yWaypointList"> [11.25]</rosparam>
      <rosparam param="zWaypointList"> [2]</rosparam>
      <param name="waypointIndex"          value="0"   />   # [-]
      <param name="waypointRadius"         value="1"   />   # m
      <param name="stayTime"               value="2.0" />   # s
    </node>

    <!-- Position Controller -->
    <include file="$(find quadnodes)/launch/positionControl.launch">
      <arg name="quadID"         default="3"/>
      <arg name="enableObsAvoid" default="$(arg enableObsAvoid)"/>
      <arg name="SpawnUAV1"      default="$(arg SpawnUAV1)"/>
      <arg name="SpawnUAV2"      default="$(arg SpawnUAV2)"/>
      <arg name="SpawnUAV3"      default="$(arg SpawnUAV3)"/>
    </include>
  </group>

  <!-- Create tf transformations -->
  <node pkg="tf" type="static_transform_publisher" name="UAVs2World" args="0.0 0.0 0.0 0 0 0 world worldUAVs 100" />
  <node pkg="tf" type="static_transform_publisher" name="gaden2World" args="0.0 0.0 0.0 0 0 0 world map_gaden 100" if="$(eval PlumeType == 'gaden')"/>
  <node pkg="tf" type="static_transform_publisher" name="pid1_broadcaster" args="0.0 0.0 0.01 0 0 0 UAV1 pid_frame1 100" if="$(eval PlumeType == 'gaden' and SpawnUAV1)"/>
  <node pkg="tf" type="static_transform_publisher" name="pid2_broadcaster" args="0.0 0.0 0.01 0 0 0 UAV2 pid_frame2 100" if="$(eval PlumeType == 'gaden' and SpawnUAV2)"/>
  <node pkg="tf" type="static_transform_publisher" name="pid3_broadcaster" args="0.0 0.0 0.01 0 0 0 UAV3 pid_frame3 100" if="$(eval PlumeType == 'gaden' and SpawnUAV3)"/>

  <!-- Plotting -->
  <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot2"  args="/UAV1/Sensor_reading/raw /UAV2/Sensor_reading/raw /UAV3/Sensor_reading/raw" if="$(eval PlumeType == 'gaden' and ReadingPlot)"/>
  <node pkg="rqt_plot" type="rqt_plot" name="rqt_plot2"  args="/UAV1/gaussianReading/ppm /UAV2/gaussianReading/ppm /UAV3/gaussianReading/ppm" if="$(eval PlumeType == 'gaussian' and ReadingPlot)"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find quadnodes)/rvizConfigs/gaden.rviz" if="$(eval PlumeType == 'gaden' and RVIZGUI)"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find quadnodes)/rvizConfigs/gauss.rviz"  if="$(eval PlumeType == 'gaussian' and RVIZGUI)"/>

</launch>
